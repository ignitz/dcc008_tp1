DEPTH = 256;
WIDTH = 8;
ADDRESS_RADIX = HEX;
DATA_RADIX = BIN;
CONTENT
BEGIN

00        :  00001000;              -- loadi R0 254 ; Le n da entrada padrao
01        :  11111110;              -- 
02        :  10011000;              -- storeSp R0-2 ; Empilha n
03        :  11111110;              -- 
04        :  01111000;              -- moveSp -2 ; Move o ponteiro de pilha
05        :  11111110;              -- 
06        :  10001000;              -- call _Soma ; Chama a funcao de soma
07        :  00010000;              -- 
08        :  10010010;              -- loadSp R2 0 ; Desempilha o valor do resultado
09        :  00000000;              -- 
0A        :  01111000;              -- moveSp 2 ; Move o ponteiro de pilha
0B        :  00000010;              -- 
0C        :  00010010;              -- storei R2 254 ; Imprime o resultado
0D        :  11111110;              -- 
[0E..0F]:  00000000;              -- 
10        :  10010101;              -- _Soma: loadSp R5 0 ; Carrega o valor de n, empilhado
11        :  00000000;              -- 
12        :  01111000;              -- moveSp 2 ; move o ponteiro de pilha
13        :  00000010;              -- 
14        :  00011110;              -- _loop: add R6 R5 ; acumula a soma em R6
15        :  10100000;              -- 
16        :  10111101;              -- addi R5-1 ; Seleciona n-1, para ser somado
17        :  11111111;              -- 
18        :  01000101;              -- jmpz R5_pula ; Se esse valor for 0, sai do loop
19        :  00011100;              -- 
1A        :  00111000;              -- jump _loop ; Se nao, vai pra a proxima iteracao
1B        :  00010100;              -- 
1C        :  10011110;              -- _pula: storeSp R6-2 ; Empilha o resultado
1D        :  11111110;              -- 
1E        :  01111000;              -- moveSp -2 ; move o ponteiro de pilha
1F        :  11111110;              -- 
20        :  10100000;              -- ret
[21..FF]:  00000000;              -- 
END;
